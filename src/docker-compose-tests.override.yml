version: '3.4'

services:
  kafka-test:
    ports:
      - "9092:9092"
    environment:
      # KRaft settings
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-test:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-test:9092
      - KAFKA_NODE_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=M2UwYmM2NzYwOTA3NDg4Nj

  kafka-schema-registry-test:
    ports:
      - 8085:8085
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka-test:9092
      - SCHEMA_REGISTRY_HOST_NAME=kafka-schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8085
      - SCHEMA_REGISTRY_DEBUG=true
      - KAFKA_LOG_CLEANUP_POLICY=compact

  basket-data-test:
    ports:
      - "6379:6379"

  sql-data-test:
    environment:
      - POSTGRES_PASSWORD=Pass@word
      - POSTGRES_USER=eshop
    ports:
      - "5432:5432"

  nosql-data-test:
    ports:
      - "27017:27017"

  identity-api-test:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - SpaClient=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5104
      - XamarinCallback=http://${ESHOP_PROD_EXTERNAL_DNS_NAME_OR_IP}:5105/xamarincallback
      - ConnectionStrings__IdentityDB=Host=sql-data-test;Database=identity;Username=eshop;Password=Pass@word
      - MvcClient=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5100
      - BasketApiClient=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5103
      - OrderingApiClient=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5102
      - MobileShoppingAggClient=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5120
      - WebShoppingAggClient=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5121
      - UseCustomizationData=True
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
    ports:
      - "5105:80"

  basket-api-functional-test:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionStrings__Redis=${ESHOP_AZURE_REDIS_BASKET_DB:-basket-data-test}
      - identityUrl=http://identity-api
      - IdentityUrlExternal=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5105
      - Kafka__BootstrapServers__0=kafka-test:9092
      - Kafka__SchemaRegistry__Url=kafka-schema-registry-test:8085
      - AzureServiceBusEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - UseLoadTest=${USE_LOADTEST:-False}
    ports:
      - "5103:80"
    entrypoint:
      - dotnet
      - test
      - --logger
      - trx;LogFileName=/tests/basket-functional-test-results.xml

  basket-api-unit-test:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionStrings__Redis=${ESHOP_AZURE_REDIS_BASKET_DB:-basket-data-test}
      - identityUrl=http://identity-api
      - IdentityUrlExternal=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5105
      - Kafka__BootstrapServers__0=kafka-test:9092
      - Kafka__SchemaRegistry__Url=kafka-schema-registry-test:8085
      - AzureServiceBusEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - UseLoadTest=${USE_LOADTEST:-False}
    ports:
      - "5113:80"
    entrypoint:
      - dotnet
      - test
      - --logger
      - trx;LogFileName=/tests/basket-unit-test-results.xml

  catalog-api-functional-test:
    environment:
      - ConnectionStrings__CatalogDb=Host=sql-data-test;Database=catalog;Username=eshop;Password=Pass@word
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - PicBaseUrl=${ESHOP_STORAGE_CATALOG_URL}
      - Kafka__BootstrapServers__0=kafka-test:9092
      - Kafka__SchemaRegistry__Url=kafka-schema-registry-test:8085
      - AzureStorageAccountName=${ESHOP_AZURE_STORAGE_CATALOG_NAME}
      - AzureStorageAccountKey=${ESHOP_AZURE_STORAGE_CATALOG_KEY}
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - AzureStorageEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
    ports:
      - "5101:80"
    entrypoint:
      - dotnet
      - test
      - --logger
      - trx;LogFileName=/tests/catalog-functional-test-results.xml

  catalog-api-unit-test:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionStrings__CatalogDb=Host=sql-data-test;Database=catalog;Username=eshop;Password=Pass@word
      - PicBaseUrl=${ESHOP_STORAGE_CATALOG_URL}
      - Kafka__BootstrapServers__0=kafka-test:9092
      - Kafka__SchemaRegistry__Url=kafka-schema-registry-test:8085
      - AzureStorageAccountName=${ESHOP_AZURE_STORAGE_CATALOG_NAME}
      - AzureStorageAccountKey=${ESHOP_AZURE_STORAGE_CATALOG_KEY}
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - AzureStorageEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
    ports:
      - "5191:80"
    entrypoint:
      - dotnet
      - test
      - --logger
      - trx;LogFileName=/tests/catalog-unit-test-results.xml

  ordering-api-functional-test:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionStrings__OrderingDB=Host=sql-data-test;Database=ordering;Username=eshop;Password=Pass@word
      - identityUrl=http://identity-api
      - IdentityUrlExternal=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5105
      - Kafka__BootstrapServers__0=kafka-test:9092
      - Kafka__SchemaRegistry__Url=kafka-schema-registry-test:8085
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - CheckUpdateTime=30000
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - UseLoadTest=${USE_LOADTEST:-False}
    ports:
      - "5102:80"
    entrypoint:
      - dotnet
      - test
      - --logger
      - trx;LogFileName=/tests/ordering-functional-test-results.xml

  ordering-api-unit-test:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionStrings__OrderingDB=Host=sql-data-test;Database=ordering;Username=eshop;Password=Pass@word
      - identityUrl=http://identity-api
      - IdentityUrlExternal=http://${ESHOP_EXTERNAL_DNS_NAME_OR_IP}:5105
      - Kafka__BootstrapServers__0=kafka-test:9092
      - Kafka__SchemaRegistry__Url=kafka-schema-registry-test:8085
      - UseCustomizationData=True
      - AzureServiceBusEnabled=False
      - CheckUpdateTime=30000
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
      - UseLoadTest=${USE_LOADTEST:-False}
    ports:
      - "5112:80"
    entrypoint:
      - dotnet
      - test
      - --logger
      - trx;LogFileName=/tests/ordering-unit-test-results.xml

  payment-api-test:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - Kafka__BootstrapServers__0=kafka-test:9092
      - Kafka__SchemaRegistry__Url=kafka-schema-registry-test:8085
      - AzureServiceBusEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
    ports:
      - "5108:80"
